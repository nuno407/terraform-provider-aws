"""test module for jsonschema validation."""
import pytest
from jsonschema import ValidationError

from healthcheck.schema.validator import JSONSchemaValidator, Schema


class TestJSONSchemaValidation:
    """Test class for jsonschema validation."""
    @pytest.mark.unit
    @pytest.mark.parametrize("test_case,input_doc,schema,is_error",
                             [("valid_snapshot",
                               {"_id": {"$oid": "6311d1ddeab281fb76993103"},
                                "video_id": "datanauts_DATANAUTS_DEV_01_TrainingMultiSnapshot-13209000",
                                "_media_type": "image",
                                "filepath": "s3://dev-rcd-raw-video-files/Debug_Lync/datanauts_DATANAUTS_DEV_01_TrainingMultiSnapshot-132.jpeg",
                                "recording_overview": {"tenantID": "datanauts",
                                                       "deviceID": "DATANAUTS_DEV_01",
                                                       "source_videos": ["datanauts_DATANAUTS_DEV_01_TrainingRecorder_1662032441919_1662032688467"],
                                                       "#snapshots": 0}},
                                 Schema.RECORDINGS_SNAPSHOT,
                                 False),
                                 ("valid_training_recorder",
                                  {"_id": {"$oid": "633deb993338e6930dda2d03"},
                                   "video_id": "datanauts_TEST_01_InteriorRecorder_1664990899000_1664991408091",
                                   "MDF_available": "Yes",
                                   "_media_type": "video",
                                   "filepath": "s3://qa-rcd-raw-video-files/Debug_Lync/datanauts_TEST_01_InteriorRecorder_1664990899000_1664991408091.mp4",
                                   "recording_overview": {"tenantID": "datanauts",
                                                          "deviceID": "TEST_01",
                                                          "length": "0:08:29",
                                                          "snapshots_paths": ["datanauts_TEST_01_TrainingMultiSnapshot-13276000",
                                                                              "datanauts_TEST_01_TrainingMultiSnapshot-1322000"],
                                                          "#snapshots": 2,
                                                          "time": "2022-10-05 17:28:19",
                                                          "chc_duration": 78.04415,
                                                          "number_chc_events": 5},
                                      "resolution": "640x360"},
                                  Schema.RECORDINGS,
                                  False),
                                 ("error_snapshot_missing_source_videos",
                                  {"_id": {"$oid": "6311d1ddeab281fb76993103"},
                                   "video_id": "datanauts_DATANAUTS_DEV_01_TrainingMultiSnapshot-13209000",
                                   "_media_type": "image",
                                   "filepath": "s3://dev-rcd-raw-video-files/Debug_Lync/datanauts_DATANAUTS_DEV_01_TrainingMultiSnapshot-132.jpeg",
                                   "recording_overview": {"tenantID": "datanauts",
                                                          "deviceID": "DATANAUTS_DEV_01",
                                                          "#snapshots": 0}},
                                  Schema.RECORDINGS_SNAPSHOT,
                                  True),
                                 ("valid_pipeline_exec",
                                  {"_id": "srxfut2internal23_rc_srx_qa_eur_fut2_009_InteriorRecorder_123",
                                   "data_status": "received",
                                   "from_container": "Metadata",
                                   "info_source": "SDM",
                                   "last_updated": "2022-01-27T17:08:17.355328Z",
                                   "processing_list": ["Anonymize",
                                                       "CHC"],
                                      "s3_path":"Debug_Lync/srxfut2internal23_rc_srx_qa_eur_fut2_009_InteriorRecorder_123.mp4"},
                                  Schema.PIPELINE_EXECUTION,
                                  False),
                                 ("error_pipeline_exec_missing_processing_list",
                                  {"_id": "srxfut2internal23_rc_srx_qa_eur_fut2_009_InteriorRecorder_123",
                                   "data_status": "received",
                                   "from_container": "Metadata",
                                   "info_source": "SDM",
                                   "last_updated": "2022-01-27T17:08:17.355328Z",
                                   "s3_path": "Debug_Lync/srxfut2internal23_rc_srx_qa_eur_fut2_009_InteriorRecorder_123.mp4"},
                                  Schema.PIPELINE_EXECUTION,
                                  True),
                                 ("valid_signals",
                                  {"_id": {"$oid": "6273c292a99231467b1551c1"},
                                   "recording": "srxfut2internal06_rc_srx_qa_eur_fut2_011_InteriorRecorder_123",
                                   "algo_out_id": "srxfut2internal06_rc_srx_qa_eur_fut2_011_InteriorRecorder_123_CHC",
                                   "source": "CHC",
                                   "signals": {"0:00:00": 1},
                                      "CHC_periods": [{"frames": [1173,
                                                                  1422],
                                                       "duration": 15.85987261146498}]},
                                  Schema.SIGNALS,
                                  False),
                                 ("error_signals_missing_signals",
                                  {"_id": {"$oid": "6273c292a99231467b1551c1"},
                                   "recording": "srxfut2internal06_rc_srx_qa_eur_fut2_011_InteriorRecorder_123",
                                   "algo_out_id": "srxfut2internal06_rc_srx_qa_eur_fut2_011_InteriorRecorder_123_CHC",
                                   "source": "CHC",
                                   "CHC_periods": [{"frames": [1173,
                                                               1422],
                                                    "duration": 15.85987261146498}]},
                                  Schema.SIGNALS,
                                  True),
                                 ("valid_algo_output",
                                  {"_id": "deepsensation_rc_srx_develop_ivs1hi_04_InteriorRecorder_123_Anonymize",
                                   "algorithm_id": "Anonymize",
                                   "pipeline_id": "deepsensation_rc_srx_develop_ivs1hi_04_InteriorRecorder_123",
                                   "output_paths": {"metadata": "-",
                                                    "video": "dev-rcd-anonymized-video-files/Debug_Lync/deepsensation_rc_srx_develop_ivs1hi_04_InteriorRecorder_123_anonymized.mp4"}},
                                  Schema.ALGORITHM_OUTPUT,
                                  False)])
    def test_validate_schema(self, test_case: str, input_doc: dict, schema: Schema, is_error: bool):
        """Test validate schema."""
        print("Running test case:", test_case)
        if is_error:
            with pytest.raises(ValidationError):
                JSONSchemaValidator().validate_document(input_doc, schema)
        else:
            JSONSchemaValidator().validate_document(input_doc, schema)
