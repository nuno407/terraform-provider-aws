apiVersion: skaffold/v4beta2
kind: Config
metadata:
  name: container-scripts
manifests:
  kustomize:
    paths:
      # this includes all locally available services
      - ../../kubernetes_config/apps/pg/selector
      - ../../kubernetes_config/apps/pg/mdfparser
      - ../../kubernetes_config/apps/pg/sdm
      - ../../kubernetes_config/apps/pg/data_importer
      - ../../kubernetes_config/apps/pg/labeling_bridge
      # - ../../kubernetes_config/apps/pg/metadata
      - ../../kubernetes_config/apps/pg/sanitizer
      - ../../kubernetes_config/apps/pg/artifact_downloader
      - ../../kubernetes_config/apps/pg/artifact_api
      - ../../kubernetes_config/apps/pg/sdretriever
    buildArgs:
      - "--load-restrictor=LoadRestrictionsNone"
build:
    tagPolicy:
      gitCommit:
        prefix: "skaffold-"
    local:
      concurrency: 3
    artifacts:
       # SDRetriever
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/sdretriever
      context: ..
      docker:
        dockerfile: SDRetriever/Dockerfile
      runtimeType: python
      # SDM
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/sdm
      context: ..
      docker:
        dockerfile: SDM/Dockerfile
      runtimeType: python
      # Selector
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/selector
      context: ..
      docker:
        dockerfile: Selector/Dockerfile
      runtimeType: python
      # MDFParser
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/mdfparser
      context: ..
      docker:
        dockerfile: MDFParser/Dockerfile
      runtimeType: python
      # Data importer
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/data_importer
      context: ..
      docker:
        dockerfile: data_importer/Dockerfile
        buildArgs:
          LOCALSTACK_PATCH: "true"
        secrets:
          - id: voxel51token
            env: VOXEL_REGISTRY_TOKEN
      runtimeType: python
      # Labeling Bridge
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/labeling_bridge
      context: ..
      docker:
        dockerfile: labeling_bridge/Dockerfile
        buildArgs:
          LOCALSTACK_PATCH: "true"
        secrets:
          - id: voxel51token
            env: VOXEL_REGISTRY_TOKEN
      runtimeType: python
    # Metadata
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/metadata
      context: ..
      docker:
        dockerfile: Metadata/Dockerfile
        buildArgs:
          LOCALSTACK_PATCH: "true"
        secrets:
          - id: voxel51token
            env: VOXEL_REGISTRY_TOKEN
      runtimeType: python
    # Sanitizer
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/sanitizer
      context: ..
      docker:
        dockerfile: sanitizer/Dockerfile
        buildArgs:
          LOCALSTACK_PATCH: "true"
        secrets:
          - id: voxel51token
            env: VOXEL_REGISTRY_TOKEN
      runtimeType: python
    # Voxel instance
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/skaffold/voxel-local
      context: ../../kubernetes_config/apps/pg/voxel-stack/image
      docker:
        dockerfile: Dockerfile
        secrets:
          - id: voxel51token
            env: VOXEL_REGISTRY_TOKEN
      runtimeType: python
    #Artifact downloader
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/artifact_downloader
      context: ..
      docker:
        dockerfile: artifact_downloader/Dockerfile
        buildArgs:
          LOCALSTACK_PATCH: "true"
      runtimeType: python
    #Artifact api
    - image: 081962623310.dkr.ecr.eu-central-1.amazonaws.com/artifact_api
      context: ..
      docker:
        dockerfile: artifact_api/Dockerfile
        secrets:
          - id: voxel51token
            env: VOXEL_REGISTRY_TOKEN
        buildArgs:
          LOCALSTACK_PATCH: "true"
      runtimeType: python

portForward:
  - resourceType: Service
    resourceName: voxel
    namespace: data-ingestion
    port: 5151
    localPort: 5151
  - resourceType: Service
    resourceName: labeling-bridge
    namespace: data-ingestion
    port: 80
    localPort: 5000
  - resourceType: Service
    resourceName: mongodb
    namespace: data-ingestion
    port: 27017
    localPort: 27017
  - resourceType: Service
    resourceName: localstack
    namespace: data-ingestion
    port: 4566
    localPort: 4566
deploy:
  kubeContext: not-the-default-context
profiles:
- name: vcluster
  build:
    local:
      push: true
      useBuildkit: true
  patches:
    - op: add
      path: /manifests/kustomize/paths/-
      value: ../../kubernetes_config/apps/pg/voxel-stack/vcluster
  deploy:
    # Set this value according to your needs. Very dangerous since you can destroy the full deployment of an application if you point to the wrong context (aka wrong)
    kubeContext: vcluster-dev
  manifests:
    hooks:
      before:
        - host:
            command: ["sh", "-c", 'sed -i "/input_queue:/c\input_queue: dev-terraform-queue-sanitizer-vcluster-$(echo $NTUSER)" ../../kubernetes_config/apps/pg/sanitizer/config.yml']
      after:
        - host:
            command: ["sh", "-c", 'sed -i "/input_queue:/c\input_queue: dev-terraform-queue-sanitizer" ../../kubernetes_config/apps/pg/sanitizer/config.yml']
- name: local
  build:
    local:
      push: false
      useBuildkit: true
  manifests:
    hooks:
      before:
        - host:
            command: ["sh", "-c", 'sed -i "/input_queue:/c\input_queue: dev-terraform-queue-sanitizer" ../../kubernetes_config/apps/pg/sanitizer/config.yml']
  patches:
    - op: add
      path: /manifests/kustomize/paths/-
      value: ../../kubernetes_config/apps/pg/jupyter-server
    - op: add
      path: /manifests/kustomize/paths/-
      value: ../../kubernetes_config/apps/pg/voxel-stack/local
    - op: add
      path: /build/artifacts/-
      value: |
        - image: voxel-ui-plugins-image
          context: ../../voxel51_plugins/ui-plugins
          docker:
            dockerfile: ../utils/ui-plugins/Dockerfile.BuildPlugins
    - op: add
      path: /build/artifacts/-
      value: |
        - image: jupyter-server-local
          context: ../../kubernetes_config/apps/pg/jupyter-server/image
          docker:
            dockerfile: Dockerfile
            secrets:
              - id: voxel51token
                env: VOXEL_REGISTRY_TOKEN
    - op: add
      path: /portForward/-
      value: |
        - resourceType: Service
          resourceName: jupyter-server
          namespace: data-ingestion
          port: 8888
          localPort: 8888
  deploy:
    # Set this value according to your needs. Very dangerous since you can destroy the full deployment of an application if you point to the wrong context (aka wrong)
    kubeContext: kind-kind
