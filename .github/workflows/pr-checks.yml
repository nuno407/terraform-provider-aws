name: PR Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Pre-commit check
      uses: pre-commit/action@v3.0.0

  list-all-service-directories:
    name: List directories to lint and test
    if: success() || failure() # making lint optional for now
    needs: [pre-commit]
    runs-on: ubuntu-latest
    outputs:
      python-directories: ${{ steps.list-step.outputs.python-directories }}
      javascript-directories: ${{ steps.list-step.outputs.javascript-directories }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - id: list-step
        uses: ./.github/actions/list-all-service-directories

  lint-python-projects:
    name: Lint Python projects
    runs-on: ubuntu-latest
    needs: [list-all-service-directories]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.list-all-service-directories.outputs.python-directories) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/lint-python
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}
          voxel-pip-registry-token: ${{ secrets.FIFTYONE_TOKEN }}

  lint-javascript-projects:
    name: Lint Javascript projects
    runs-on: ubuntu-latest
    needs: [list-all-service-directories]
    strategy:
      fail-fast: false
      matrix:
        node-version: ["18.x"]
        service: ${{ fromJSON(needs.list-all-service-directories.outputs.javascript-directories) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/lint-javascript
        with:
          baseDir: ${{ matrix.service }}
          node-version: ${{ matrix.node-version }}
          npm-registry: https://artifactory.boschdevcloud.com/artifactory/api/npm/lab000003-bci-npm-virtual/
          npm-auth: ${{ secrets.NPM_AUTH }}
          npm-email: ${{ secrets.NPM_EMAIL }}

  run-python-sast:
    name: Run SAST for Python projects
    runs-on: ubuntu-latest
    if: success() || failure() # making SAST optional for now
    needs: [list-all-service-directories]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.list-all-service-directories.outputs.python-directories) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/sast-python
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}

  run-python-tests:
    name: Run Python projects tests
    runs-on: ubuntu-latest
    if: success() || failure() # making lint optional for now
    needs: [list-all-service-directories, lint-python-projects]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.list-all-service-directories.outputs.python-directories) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/test-python
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}
          voxel-pip-registry-token: ${{ secrets.FIFTYONE_TOKEN }}

  run-javascript-tests:
    name: Run Javascript projects tests
    runs-on: ubuntu-latest
    if: success() || failure() # making lint optional for now
    needs: [list-all-service-directories, lint-javascript-projects]
    strategy:
      fail-fast: false
      matrix:
        node-version: ["18.x"]
        service: ${{ fromJSON(needs.list-all-service-directories.outputs.javascript-directories) }}

    steps:
      - shell: bash
        run: |
          echo "No Tests for now :)"

  sonarqube-scan:
    name: Sonarqube scan on code
    runs-on: ubuntu-latest
    needs: [run-python-tests, run-javascript-tests, run-python-sast]
    if: success() || failure()
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get coverage reports
        uses: actions/download-artifact@v3

      - name: Sonarqube scan
        id: sonarqube-scan
        uses: ./.github/actions/scan-code
        timeout-minutes: 5
        with:
          baseDir: "./"
          url: ${{ secrets.SONAR_HOST_URL }}
          token: ${{ secrets.SONAR_TOKEN }}
          args:  >
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=master

      - name: Sonarqube quality gate status
        run: "echo quality gate result: ${{steps.sonarqube-scan.outputs.scan-success}}"

      - name: Check python unit test matrix status
        if: ${{ needs.run-python-tests.result != 'success' }}
        run: exit 1
