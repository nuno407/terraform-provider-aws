name: Build Docker image and update k8s config for changed services

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: eu-central-1
  AWS_ROLE: arn:aws:iam::081962623310:role/github-oidc-access
  EXCLUDED_DIRS: '[".git", ".github", ".vscode", "baseaws"]'

permissions:
  id-token: write
  contents: write

jobs:
  determine-changed-services:
    name: Determine which services to build
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changed-services.outputs.services }}
      git-tag: ${{ steps.git-tag-push.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.CONTAINER_SCRIPTS_SSH_KEY }}

      - name: Determine services to build
        id: changed-services
        env:
          GITHUB_EVENT_BEFORE: ${{ github.event.before }}
          GITHUB_EVENT_AFTER: ${{ github.event.after }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: python ./.github/workflows/determine_services_to_build.py

      - name: Git tag & push
        id: git-tag-push
        if: steps.changed-services.outputs.services != '[]'
        run: |
          TAG=$(date +%F)-$(git rev-parse --short HEAD)
          if [ '${{ github.ref_name }}' != 'master' ]; then
            SANITIZED_BRANCH_NAME=$(echo ${{ github.ref_name }} | tr '/' '-' | tr -dc '[:alnum:]-' | tr '[:upper:]' '[:lower:]')
            TAG=$TAG-$SANITIZED_BRANCH_NAME
          fi
          echo "Using this git tag: $TAG"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a $TAG -m "Created on $(date +'%F %T')"
          git push origin $TAG
          echo "::set-output name=tag::$TAG"

      - name: Add summary
        if: steps.changed-services.outputs.services == '[]'
        run: |
          echo "No service change detected, nothing to build." >> $GITHUB_STEP_SUMMARY


  build-image:
    needs: determine-changed-services
    name: Build image for
    runs-on: ubuntu-latest
    if: needs.determine-changed-services.outputs.services != '[]'
    strategy:
      fail-fast: false
      matrix:
        service: ${{fromJSON(needs.determine-changed-services.outputs.services)}}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.3.3

      - name: Build and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          SERVICE_LOWERCASE=$(echo ${{ matrix.service }} | tr '[:upper:]' '[:lower:]')
          TAG=$ECR_REGISTRY/$SERVICE_LOWERCASE:${{ needs.determine-changed-services.outputs.git-tag }}
          docker build -f ./${{ matrix.service }}/Dockerfile -t $TAG --build-arg TOKEN=${{ secrets.FIFTYONE_TOKEN }} .
          docker push $TAG
          echo "Service ${{ matrix.service }} was built and pushed." >> $GITHUB_STEP_SUMMARY
          echo "Image tag: $TAG" >> $GITHUB_STEP_SUMMARY
