name: PR Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Pre-commit check
      uses: pre-commit/action@v3.0.0

    - name: Check pull request title
      env:
        PR_TITLE: ${{ github.event.pull_request.title }}
      run: |
        REGEX_PR_TITLE='MC-[0-9]{4,}|NO-TICKET|Bump'
        [[ $PR_TITLE =~ $REGEX_PR_TITLE ]] && exit 0
        echo "The pull request title does not contain a ticket name." 1>&2
        exit 1

  determine-changed-services:
    name: Determine which services to build
    runs-on: ubuntu-22.04
    outputs:
      services: ${{ steps.changed-services.outputs.services }}
      needs-testing: ${{ steps.changed-services.outputs.needs-testing }}
      python-directories: ${{ steps.changed-services.outputs.python-directories }}
      javascript-directories: ${{ steps.changed-services.outputs.javascript-directories }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Determine services to build
        id: changed-services
        uses: bosch-rc-dev/actions/determine-services-to-build@main
        with:
          services: ${{ inputs.services }}

  lint-python-projects:
    name: Lint Python
    runs-on: ubuntu-22.04
    needs: [determine-changed-services]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.determine-changed-services.outputs.python-directories) }}

    steps:
      - name: Checkout code
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: actions/checkout@v3
      - uses: bosch-rc-dev/actions/lint-python@main
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}
          voxel-pip-registry-token: ${{ secrets.FIFTYONE_TOKEN }}

  lint-javascript-projects:
    name: Lint Javascript
    runs-on: ubuntu-22.04
    needs: [determine-changed-services]
    strategy:
      fail-fast: false
      matrix:
        node-version: ["18.x"]
        service: ${{ fromJSON(needs.determine-changed-services.outputs.javascript-directories) }}
    steps:
      - name: Checkout code
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: actions/checkout@v3
      - uses: bosch-rc-dev/actions/lint-javascript@main
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        with:
          baseDir: ${{ matrix.service }}
          node-version: ${{ matrix.node-version }}
          npm-registry: https://artifactory.boschdevcloud.com/artifactory/api/npm/lab000003-bci-npm-virtual/
          npm-auth: ${{ secrets.NPM_AUTH }}
          npm-email: ${{ secrets.NPM_EMAIL }}

  run-python-sast:
    name: SAST Python
    runs-on: ubuntu-22.04
    if: success() || failure() # making SAST optional for now
    needs: [determine-changed-services]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.determine-changed-services.outputs.python-directories) }}

    steps:
      - name: Checkout code
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: actions/checkout@v3
      - uses: bosch-rc-dev/actions/sast-python@main
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}

  run-python-tests:
    name: Unit tests
    runs-on: ubuntu-22.04
    if: success() || failure() # making lint optional for now
    needs: [determine-changed-services]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.determine-changed-services.outputs.python-directories) }}

    steps:
      - name: Checkout code
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: actions/checkout@v3
      - uses: bosch-rc-dev/actions/test-python@main
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        name: Run unit tests
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}
          voxel-pip-registry-token: ${{ secrets.FIFTYONE_TOKEN }}

  run-python-integration-tests:
    name: Integration tests
    runs-on: ubuntu-22.04
    if: success() || failure() # making lint optional for now
    needs: [determine-changed-services]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        service: ${{ fromJSON(needs.determine-changed-services.outputs.python-directories) }}

    steps:
      - name: Checkout code
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: actions/checkout@v3
      - name: Run integration tests
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: bosch-rc-dev/actions/test-python@main
        with:
          baseDir: ${{ matrix.service }}
          python-version: ${{ matrix.python-version }}
          voxel-pip-registry-token: ${{ secrets.FIFTYONE_TOKEN }}
          extra-pytest-args: -m integration
          mode: integration

  run-javascript-tests:
    name: Javascript tests
    runs-on: ubuntu-22.04
    if: success() || failure() # making lint optional for now
    needs: [determine-changed-services]
    strategy:
      fail-fast: false
      matrix:
        node-version: ["18.x"]
        service: ${{ fromJSON(needs.determine-changed-services.outputs.javascript-directories) }}

    steps:
      - name: Checkout code
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        uses: actions/checkout@v3
      - uses: bosch-rc-dev/actions/test-javascript@main
        if: ${{contains(fromJSON(needs.determine-changed-services.outputs.needs-testing), matrix.service)}}
        with:
          baseDir: ${{ matrix.service }}
          node-version: ${{ matrix.node-version }}
          npm-registry: https://artifactory.boschdevcloud.com/artifactory/api/npm/lab000003-bci-npm-virtual/
          npm-auth: ${{ secrets.NPM_AUTH }}
          npm-email: ${{ secrets.NPM_EMAIL }}


  sonarqube-scan:
    name: Sonarqube scan on code
    runs-on: ubuntu-22.04
    needs: [run-python-tests, run-python-integration-tests, run-javascript-tests, run-python-sast]
    if: success() || failure()
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get static analysis and coverage reports
        uses: actions/download-artifact@v3

      - name: Collect SAST reports
        id: sast-reports
        run: |
          echo "report-paths=$(ls --format=commas *-security-report/*.json | tr -s '[:blank:]' ',' | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Sonarqube scan
        id: sonarqube-scan
        uses: bosch-rc-dev/actions/scan-code@main
        timeout-minutes: 5
        with:
          baseDir: "./"
          url: ${{ secrets.SONAR_HOST_URL }}
          token: ${{ secrets.SONAR_TOKEN }}
          args:  >
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=master
            -Dsonar.python.bandit.reportPaths=${{ steps.sast-reports.outputs.report-paths }}

      - name: Sonarqube quality gate status
        run: "echo quality gate result: ${{steps.sonarqube-scan.outputs.scan-success}}"

      - name: Check python unit test matrix status
        if: ${{ needs.run-python-tests.result != 'success' }}
        run: exit 1
