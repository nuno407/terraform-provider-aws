@startuml mdfparser
namespace mdfparser {
  namespace config {}
  namespace consumer {}
  namespace interface {
    namespace input_message {}
    namespace handler {}
    namespace output_message {}
    namespace s3_interaction {}
  }
  namespace imu {
    namespace handler {}
    namespace downloader {}
    namespace uploader {}
    namespace transformer {}
  }
  namespace metadata {
    namespace handler {}
    namespace downloader {}
    namespace uploader {}
    namespace synchronizer {}
  }
  namespace exceptions {}
  namespace main {}
}
class mdfparser.config.MdfParserConfig {
  input_queue: str
  metadata_output_queue: str
}
class mdfparser.consumer.Consumer {
  container_services: ContainerServices
  handlers: dict[DataType, Handler]
}
enum mdfparser.interface.input_message.DataType {
  METADATA: metadata {static}
  IMU: imu {static}
}
abstract class mdfparser.interface.handler.Handler {
}
class mdfparser.imu.handler.IMUHandler {
  downloader: IMUDownloader
  uploader: IMUUploader
}
class mdfparser.interface.input_message.InputMessage {
  _id: str {static}
  s3_path: str {static}
  data_type: DataType {static}
}
class mdfparser.metadata.handler.MetadataHandler {
  downloader: None
  uploader: None
  synchronizer: None
  processors: list[Processor]
}
class mdfparser.interface.output_message.OutputMessage {
  _id: str {static}
  parsed_file_path: str {static}
  data_type: DataType {static}
}
class mdfparser.exceptions.InvalidFileNameException {
}
class mdfparser.exceptions.NoProcessingSuccessfulException {
}
class mdfparser.imu.downloader.IMUDownloader {
}
class mdfparser.interface.s3_interaction.S3Interaction {
  _s3_client: None
}
class mdfparser.imu.uploader.IMUUploader {
}
class mdfparser.imu.transformer.Transformer {
}
class mdfparser.metadata.downloader.InvalidCompactMdfException {
}
class mdfparser.metadata.downloader.MetadataDownloader {
}
class mdfparser.metadata.uploader.MetadataUploader {
}
class mdfparser.metadata.synchronizer.Synchronizer {
}
class mdfparser.metadata.synchronizer.InvalidMdfException {
}
mdfparser.consumer.Consumer *-- mdfparser.interface.input_message.DataType
mdfparser.consumer.Consumer *-- mdfparser.interface.handler.Handler
mdfparser.interface.handler.Handler <|-- mdfparser.imu.handler.IMUHandler
mdfparser.interface.input_message.InputMessage *-- mdfparser.interface.input_message.DataType
mdfparser.interface.handler.Handler <|-- mdfparser.metadata.handler.MetadataHandler
mdfparser.interface.output_message.OutputMessage *-- mdfparser.interface.input_message.DataType
mdfparser.imu.handler.IMUHandler *-- mdfparser.imu.downloader.IMUDownloader
mdfparser.imu.handler.IMUHandler *-- mdfparser.imu.uploader.IMUUploader
mdfparser.imu.handler.IMUHandler *-- mdfparser.imu.transformer.IMUTransformer
mdfparser.metadata.handler.MetadataHandler *-- mdfparser.metadata.downloader.MetadataDownloader
mdfparser.metadata.handler.MetadataHandler *-- mdfparser.metadata.uploader.MetadataUploader
mdfparser.metadata.handler.MetadataHandler *-- mdfparser.metadata.synchronizer.Synchronizer
footer Generated by //py2puml//
@enduml
